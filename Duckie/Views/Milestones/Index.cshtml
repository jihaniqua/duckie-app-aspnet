@model IEnumerable<Duckie.Models.Milestone>

@{
    ViewData["Title"] = "Milestones";
}

<div class="row pb-5">
    <div class="col-md-8">
        <h1>Milestones Achieved</h1>
        <p>Celebrate and document pivotal moments of your child as they grow.</p>
    </div>
    <div class="col-md-4 align-self-md-center text-md-end">
        <p>
            <a asp-action="Create" class="btn btn-primary">Add Milestone</a>
        </p>
    </div>
</div>

<div class="milestones-grid">
    @foreach (var item in Model) {
    <div class="milestones-card">
        <div class="milestones-card-top">
            <p class="card-chip"><small>@Html.DisplayFor(modelItem => item.ChildProfile.Name)</small></p>
            <h3>@Html.DisplayFor(modelItem => item.MilestoneName)</h3>
                <p><small>@Html.DisplayFor(modelItem => item.MilestoneDate)</small></p>
            <p>@Html.DisplayFor(modelItem => item.Comments)</p>
            <p>
                @if (item.Photo != null)
                {
                    <img src="~/img/milestone-images/@item.Photo" alt="Milestone Photo" class="preview"/>        
                }
            </p>
        </div>
        <div class="milestones-card-bottom">
            <div class="card-links">
                <a asp-action="Details" asp-route-id="@item.MilestoneID">Details</a>
                <a asp-action="Edit" asp-route-id="@item.MilestoneID">Edit</a>
                <a asp-action="Delete" asp-route-id="@item.MilestoneID">Delete</a>
            </div>
        </div>
    </div>
}
</div>